<?xml version="1.0" encoding="ISO-8859-1"?><!--pos:0-->
<!-- generated by hnb 1.9.9 (http://hnb.sourceforge.net) -->

<!DOCTYPE tree[
	<!ELEMENT tree (node*)>
	<!ELEMENT data (#PCDATA)> <!-- (max 4096 bytes long) -->
	<!ELEMENT node (data?,node*)>
	<!ATTLIST node done (yes|no) #IMPLIED priority (1|2|3|4|5|6|7|8|9) #IMPLIED> ]>

<tree>
<node><data>press right arrow to begin</data>
	<node><data>Welcome to &apos;hierachical notebook&apos;</data></node>
	<node><data></data></node>
	<node><data>Navigate using your arrow keys, right takes you a level further down in the tree, left brings you up a level, up and down navigates amongst the siblings.</data></node>
	<node><data>entries that are printed in bold, have children</data></node>
	<node><data></data></node>
	<node><data>usage documentation</data>
		<node><data>On the bottom of your terminal window you see a list of allowed commands, a letter with a caret (^) in front means that you should press control and the letter.</data></node>
		<node><data></data></node>
		<node><data>navigation</data>
			<node><data>you navigate the tree by using the arrow keys.</data></node>
			<node><data>pageup and pagedown skips to the node at the top/bottom of your screen.</data></node>
			<node><data>by starting to type the start of an sibling entry, the focus will skip to a node beginning with those characters, pressing tab will select that node, tabbing again will go to the sublevel, just like filename completion in a unix shell.</data></node>
			<node><data>to find a node press ctrl+f, enter a search term, and follow the instructions at the bottom of the screen.</data></node>
		</node>
		<node><data>data entry/modification</data>
			<node><data>to insert a node at a location, press insert, and a new node will appear below the current node.</data></node>
			<node><data>pressing enter will edit the current node.</data></node>
			<node><data>the entry completion feature explained in navigation will also insert a new node if you press enter after typing something that is not already exist as a node, the new node will be inserted as the bottommost sibling at the current level.</data></node>
		</node>
		<node><data>todo lists</data>
			<node done="no"><data>pressing ctrl+t will toggle a checkmark to the left of the current entry, like this node.</data></node>
			<node><data>new nodes created below this node will also have a checkmark.</data>
				<node><data>aaa</data></node>
			</node>
			<node><data>pressing ctrl+d will check the checkbox, </data></node>
			<node><data>the parents of the checked of entry will show a percentage of how many of the subnodes are checked off.</data></node>
		</node>
		<node><data>removing nodes</data>
			<node><data>pressing delete while navigating will removea node, if the node has children you must confirm the deletion</data></node>
		</node>
		<node><data>exporting to other formats</data>
			<node><data>to export to other formats you must bring up the commandline (default binding f5), enter &apos;export_&apos; and press tab, the available formats will show up at the top of the screen in the status information.</data></node>
			<node><data>the current node the following nodes of the same sublevel and all involved subnodes will be saved.</data></node>
		</node>
		<node><data>moving and copying of nodes/subtrees</data>
			<node><data>pressing ^G will grab the current entry, and you can move it to a new destination. Holding down shift without pressing ^G first has the same effect on many terminals.</data></node>
			<node><data>^X ^C and ^V will respectively cut, copy and paste the current node and it&apos;s subtree</data></node>
			<node><data>&gt; and &lt; will take the current node, and the following siblings and either indent or outdent them one level</data></node>
		</node>
		<node><data>saving/quitting</data>
			<node><data>f2 will save the current database</data></node>
			<node><data>pressing [esc] will give you choices related to saving and quitting</data>
				<node><data>save</data></node>
				<node><data>quit</data></node>
				<node><data>save and quit</data></node>
			</node>
		</node>
		<node><data>command line parameters</data>
			<node><data>usage: hnb [database] [options] [command [command] ..]</data></node>
			<node><data></data></node>
			<node><data>if database is omitted hnb will edit the default database in unix this is ~/.hnb and in windows it is C:\hnb_data</data></node>
			<node><data></data></node>
			<node><data>OPTIONS:</data></node>
			<node><data>-h, --help - display usage and options</data></node>
			<node><data>-v, --version - display the version of hnb</data></node>
			<node><data>-t, --tutorial - load tutorial</data></node>
			<node><data></data></node>
			<node><data>-a, --ascii - specify format</data></node>
			<node><data>-o, --opml - specifies opml format</data></node>
			<node><data>-x, --xml - specify format</data></node>
			<node><data></data></node>
			<node><data>-rc &lt;file&gt; - load a different configuration file</data></node>
			<node><data>-ui &lt;interface&gt;- specify interface, either curses(default),</data></node>
			<node><data>or cli for a command line interface.</data></node>
			<node><data></data></node>
			<node><data>-e - execute commands</data></node>
			<node><data></data></node>
			<node><data>for information on which commands are available, load the commandline interface with &apos;hnb -ui cli&apos; , and type &apos;?&apos;.</data></node>
			<node><data>&apos;? command&apos; gives help on a specific command,.. these are the same commands that can be bound using the configuration file</data></node>
		</node>
	</node>
	<node><data>xml editing mode</data>
		<node><data>starting with version 1.6 hnb can also act as a general xml editor, with some nice features. It must be remembered that this is not the principal function of hnb, just a side effect, and the fact that the author wanted to implement it.</data></node>
		<node><data>to start in xml editing mode start hnb with &apos;hnb -gx file.xml&apos;</data></node>
		<node><data>hnb will load the xml file using a seperate version of the import filter, and also save in a different way than in normal mode.</data></node>
		<node><data>from loading a xml file in hnb you should get the general idea of how it handles xml data, but I&apos;ll outline some details that maybe is nonobious:</data>
			<node><data>&lt;tags&gt; starting flush left on the line are written as sgml tags to the file, with an closing tag automagially created to close the level.</data></node>
			<node><data>&lt;&gt;&amp;&quot; and &apos; are escaped unless they are part of a tag, to write the &lt; (&amp;lt;) symbol as the start of a node, you&apos;ll have to prepend it with a space</data></node>
			<node><data>&lt;b&gt; it is allowed to write embedded text after a tag, but only one tag may be defined at the start of a line this line for instance would show up in bold, and the closing tag visible &lt;/b&gt;</data></node>
			<node><data>comments read from the file will keep their newlines and tabs, (in hnb they will all be represented by spaces)</data></node>
			<node><data>tags starting with &lt;? and &lt;! are ignored in much the same way as comments</data></node>
		</node>
	</node>
	<node><data></data></node>
	<node><data>This data was loaded, because you didn&apos;t specify any database to load, and no default database was wound in your home directory.</data></node>
</node>
</tree>
