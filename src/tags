Mhnb	hnb.c	/^int main (int argc, char **argv)$/
a	xml_tok.c	/^static void a (int state, char *chars, unsigned ch/
action_cmd	actions.c	/^static int action_cmd(char *params,void *data){$/
action_node	actions.c	/^static int action_node(Node *node){$/
add	ui_cli.c	/^static int add (char *params, void *data)$/
addc	ui_cli.c	/^static int addc (char *params, void *data)$/
ascii_export_node	file_ascii.c	/^static void ascii_export_node (FILE * file, int le/
calc_percentage_size	tree_todo.c	/^int calc_percentage_size(Node *node, int *retsize)/
cd	ui_cli.c	/^static int cd (char *params, void *data)$/
cli	ui_cli.c	/^Node *cli (Node *pos)$/
cmd_go_backrecurse	tree_misc.c	/^static int cmd_go_backrecurse(char *params,void *d/
cmd_go_recurse	tree_misc.c	/^static int cmd_go_recurse(char *params,void *data)/
cmd_go_root	tree_misc.c	/^static int cmd_go_root(char *params,void *data){$/
cmd_indent	tree_misc.c	/^static int cmd_indent (char *params, void *data)$/
cmd_movenode	tree_misc.c	/^static int cmd_movenode(char *params,void *data){$/
cmd_outdent	tree_misc.c	/^static int cmd_outdent (char *params, void *data)$/
cmd_save	file.c	/^static int cmd_save(char *params,void *data){$/
cmp_ascdata	tree_sort.c	/^static int cmp_ascdata (Node *a, Node *b)$/
cmp_descdata	tree_sort.c	/^static int cmp_descdata (Node *a, Node *b)$/
cmp_todo	tree_sort.c	/^static int cmp_todo (Node *a, Node *b)$/
commandline_cmd	tree_misc.c	/^static int commandline_cmd (char *params, void *da/
copy_cmd	clipboard.c	/^static int copy_cmd (char *params, void *data)$/
count_words	statcmds.c	/^static int count_words(char *str){$/
cut_cmd	clipboard.c	/^static int cut_cmd (char *params, void *data)$/
display_format_cmd	ui_draw.c	/^int display_format_cmd(char *params, void *data){$/
docmd	ui_cli.c	/^Node *docmd (Node *pos, const char *commandline)$/
docmdf	ui_cli.h	/^#define docmdf(pos,args...)  \\$/
done_status	tree_todo.c	/^int done_status (Node *a)$/
down	ui_draw.c	/^static Node *down (Node *sel, Node *node)$/
draw_anr	ui_draw.c	/^static int draw_anr(int line, int col, int width, /
draw_bullet	ui_draw.c	/^static int draw_bullet(int line, int col, int widt/
draw_debug	ui_draw.c	/^static int draw_debug(int line,int col,int width,N/
draw_dummy	ui_draw.c	/^static int draw_dummy(int line, int col, int width/
draw_indent	ui_draw.c	/^static int draw_indent(int line, int col, int widt/
draw_item	ui_draw.c	/^static int draw_item(int line_start, int cursor_po/
draw_node_no	ui_draw.c	/^static int draw_node_no(int line, int col, int wid/
draw_nr	ui_draw.c	/^static int draw_nr(int line, int col, int width, N/
draw_spacing	ui_draw.c	/^static int draw_spacing(int line, int col, int wid/
draw_textblock	ui_draw.c	/^static int draw_textblock(int line_start, int col_/
dummy_cmd	ui_binding.c	/^static int dummy_cmd(char *params,void *data){$/
eCho	ui_cli.c	/^static int eCho(char *commandline, void *data){$/
evilloop	evilloop.c	/^Node *evilloop (Node *pos)$/
export_ascii	file_ascii.c	/^static int export_ascii (char *params, void *data)/
export_help	file_help.c	/^static int export_help (char *params, void *data)$/
export_hnb	file_hnb.c	/^static int export_hnb (char *params, void *data)$/
export_html	file_html.c	/^static int export_html (char *params, void *data)$/
export_htmlcss	file_html.c	/^static int export_htmlcss (char *params, void *dat/
export_opml	file_opml.c	/^static int export_opml (char *params, void *data)$/
export_ps	file_ps.c	/^static int export_ps (char *params, void *data)$/
export_xml	file_xml.c	/^static int export_xml (char *params, void *data)$/
file_check	file.c	/^int file_check (char *filename)$/
findchar	file_xml.c	/^static int findchar (char *haystack, char *needles/
getquery_cmd	search.c	/^static int getquery_cmd(char *params,void *data){$/
help_draw	ui_overlay.c	/^void help_draw (int scope)$/
help_quote	file_help.c	/^static char *help_quote (char *in)$/
hnb_export_nodes	file_hnb.c	/^static void hnb_export_nodes (FILE * file, Node *n/
html_quote	file_html.c	/^static char *html_quote (const char *in)$/
html_tok_get	xml_tok.c	/^int html_tok_get (xml_tok_state * s, char **data)$/
htmlcss_export_nodes	file_html.c	/^static void htmlcss_export_nodes (FILE * file, Nod/
if_node	node.h	/^#define if_node(a,b)		((a)?(b):0)$/
import_ascii	file_ascii.c	/^static int import_ascii (char *params, void *data)/
import_help	file_help.c	/^static int import_help (char *params, void *data)$/
import_hnb	file_hnb.c	/^static int import_hnb (char *params, void *data)$/
import_node	file.c	/^Node *import_node (import_state_t * is, int level,/
import_node_text	file.c	/^Node *import_node_text (import_state_t * is, int l/
import_opml	file_opml.c	/^static int import_opml (char *params, void *data)$/
import_xml	file_xml.c	/^static int import_xml (char *params, void *data)$/
indent	file_ascii.c	/^#define indent(count,char)	{int j;for(j=0;j<count;/
info	ui.h	/^#define info(a)\\$/
infof	ui.h	/^#define infof(a,b)\\$/
init_clipboard	clipboard.c	/^void init_clipboard(){$/
init_commandline	tree_misc.c	/^void init_commandline(){$/
init_evilloop	evilloop.c	/^void init_evilloop(){$/
init_exec_cmd	actions.c	/^void init_exec_cmd(){$/
init_file	file.c	/^void init_file(){$/
init_file_ascii	file_ascii.c	/^void init_file_ascii(){$/
init_file_help	file_help.c	/^void init_file_help(){$/
init_file_hnb	file_hnb.c	/^void init_file_hnb(){$/
init_file_html	file_html.c	/^void init_file_html(){$/
init_file_opml	file_opml.c	/^void init_file_opml(){$/
init_file_ps	file_ps.c	/^void init_file_ps(){$/
init_file_xml	file_xml.c	/^void init_file_xml(){$/
init_go_root	tree_misc.c	/^void init_go_root(){$/
init_import	file.c	/^void init_import (import_state_t * is, Node *node)/
init_insertbelow	tree_misc.c	/^void init_insertbelow(){$/
init_keepstate	state.c	/^void init_keepstate(){$/
init_mem	statcmds.c	/^void init_mem(){$/
init_movenode	tree_misc.c	/^void init_movenode(){$/
init_outdent_indent	tree_misc.c	/^void init_outdent_indent(){$/
init_prefs	prefs.c	/^void init_prefs ()$/
init_remove	tree_misc.c	/^void init_remove(){$/
init_search	search.c	/^void init_search(){$/
init_sort	tree_sort.c	/^void init_sort(){$/
init_spell	spell.c	/^void init_spell(){$/
init_statetable	xml_tok.c	/^void init_statetable(void){$/
init_stats	statcmds.c	/^void init_stats(){$/
init_subsystems	init_subsystems.c	/^void init_subsystems(){$/
init_tree_todo	tree_todo.c	/^void init_tree_todo(){$/
init_ui_binding	ui_binding.c	/^void init_ui_binding(){$/
init_ui_cli	ui_cli.c	/^void init_ui_cli (void)$/
init_ui_draw	ui_draw.c	/^void init_ui_draw(){$/
init_ui_edit	ui_edit.c	/^void init_ui_edit(){$/
init_ui_overlay	ui_overlay.c	/^void init_ui_overlay(){$/
init_ui_style	ui_style.c	/^void init_ui_style(){$/
insert_below_cmd	tree_misc.c	/^static int insert_below_cmd (char *params, void *d/
is_oneof	xml_tok.c	/^static int is_oneof (char c, char *chars)$/
load_prefs	prefs.c	/^void load_prefs (void)$/
ls	ui_cli.c	/^static int ls (char *params, void *data)$/
makebinding	ui_binding.c	/^static void makebinding(int scope_no, int key, int/
matchpath2node	path.c	/^Node *matchpath2node (char *path, Node *start)$/
mem_cmd	statcmds.c	/^static int mem_cmd(char *params,void *data){$/
name2color	ui_style.c	/^static int name2color (const char *name_in)$/
next_match_cmd	search.c	/^static int next_match_cmd(char *params,void *data)/
nextchar	xml_tok.c	/^int nextchar (xml_tok_state * t)$/
no_path2node	path.c	/^Node *no_path2node (char *path, Node *root)$/
node2no_path	path.c	/^char *node2no_path (Node *node)$/
node2path	path.c	/^char *node2path (Node *node)$/
node_backrecurse	tree.c	/^Node *node_backrecurse (Node *node)$/
node_backrecursive_match	tree.c	/^Node *node_backrecursive_match (char *match, Node /
node_bottom	tree.c	/^Node *node_bottom (Node *node)$/
node_calc_complete	tree_todo.c	/^int node_calc_complete (Node *node)$/
node_calc_size	tree_todo.c	/^int node_calc_size(Node *node){$/
node_down	node.h	/^#define node_down(node)		if_node((node),(node)->do/
node_duplicate	node.c	/^Node *node_duplicate(Node *node){$/
node_exact_match	tree.c	/^Node *node_exact_match (char *match, Node *where)$/
node_free	node.c	/^void node_free (Node *node)$/
node_getdata	node.c	/^char *node_getdata (Node *node)$/
node_getflag	node.h	/^#define node_getflag(node,flag)	if_node((node),((n/
node_getflags	node.h	/^#define node_getflags(node)			if_node((node),((nod/
node_getpercent_done	node.h	/^#define node_getpercent_done(node)		(node?(node->p/
node_getpriority	node.h	/^#define node_getpriority(node)		(node?(node->prior/
node_getsize	node.h	/^#define node_getsize(node)		(node?(node->size):-1)/
node_insert_down	tree.c	/^Node *node_insert_down (Node *node)$/
node_insert_right	tree.c	/^Node *node_insert_right (Node *node)$/
node_insert_up	tree.c	/^Node *node_insert_up (Node *node)$/
node_left	node.h	/^#define node_left(node)		if_node((node),(node)->le/
node_match	tree.c	/^Node *node_match (char *match, Node *where)$/
node_new	node.c	/^Node *node_new ()$/
node_no	tree.c	/^int node_no (Node *node)$/
node_recurse	tree.c	/^Node *node_recurse (Node *node)$/
node_recursive_match	tree.c	/^Node *node_recursive_match (char *match, Node *whe/
node_remove	tree.c	/^Node *node_remove (Node *node)$/
node_right	node.h	/^#define node_right(node)	if_node((node),(node)->ri/
node_root	tree.c	/^Node *node_root (Node *node)$/
node_setdata	node.c	/^char *node_setdata (Node *node, const char *data)$/
node_setflag	node.h	/^#define node_setflag(node,flag,state)\\$/
node_setflags	node.h	/^#define node_setflags(node,tflags)	if_node((node),/
node_setpercent_done	node.h	/^#define node_setpercent_done(node,new_percent_done/
node_setpriority	node.h	/^#define node_setpriority(node,new_priority)	(node?/
node_setsize	node.h	/^#define node_setsize(node,new_size)	(node?(node->s/
node_sort_siblings	tree_sort.c	/^Node *node_sort_siblings (Node *node)$/
node_swap	tree.c	/^void node_swap (Node *nodeA, Node *nodeB)$/
node_toggleflag	node.h	/^#define node_toggleflag(node,flag) (   node_setfla/
node_top	tree.c	/^Node *node_top (Node *node)$/
node_up	node.h	/^#define node_up(node)		if_node((node),(node)->up)$/
node_update_parents_todo	tree_todo.c	/^void node_update_parents_todo (Node *pos)$/
nodes_down	tree.c	/^unsigned int nodes_down (Node *node)$/
nodes_left	tree.c	/^unsigned int nodes_left (Node *node)$/
nodes_right	tree.c	/^unsigned int nodes_right (Node *node)$/
nodes_up	tree.c	/^unsigned int nodes_up (Node *node)$/
old_node_calc_complete	tree_todo.c	/^int old_node_calc_complete (Node *node)$/
old_node_setflag	node.h	/^#define old_node_setflag(node,flag,state)\\$/
opml_export_nodes	file_opml.c	/^static void opml_export_nodes (FILE * file, Node */
parsekey	ui_binding.c	/^Tbinding *parsekey(int key, int scope){$/
paste_cmd	clipboard.c	/^static int paste_cmd (char *params, void *data)$/
path2node	path.c	/^Node *path2node (char *path, Node *start)$/
path2node_make	path.c	/^Node *path2node_make (char *path, Node *root)$/
path_strip	ui_cli.c	/^static char *path_strip (char *path)$/
pre_command	ui_cli.c	/^void pre_command(char *commandline){$/
prev_match_cmd	search.c	/^static int prev_match_cmd(char *params,void *data)/
ps_export_node	file_ps.c	/^static void ps_export_node (FILE * file, int level/
ps_quote	file_ps.c	/^static char *ps_quote (const char *in)$/
pwd	ui_cli.c	/^static int pwd (char *params, void *data)$/
quicksort	tree_sort.c	/^static Node *quicksort (Node *Top, Node *Bottom,$/
r	xml_tok.c	/^static void r (int state, int return_type, int nex/
remove_cmd	tree_misc.c	/^static int remove_cmd(char *params,void *data){$/
remove_temp	evilloop.c	/^static int remove_temp(Node **pos){$/
resolve_binding	ui_binding.c	/^char *resolve_binding(int scope, int action){$/
restore_state_cmd	state.c	/^static int restore_state_cmd (char *params, void */
rm	ui_cli.c	/^static int rm (char *params, void *data)$/
save_state_cmd	state.c	/^static int save_state_cmd (char *params, void *dat/
set_status	ui_overlay.c	/^void set_status(char *message){$/
snprintf	ui_cli.h	/^	#define snprintf(a,b,args...) sprintf(a,args)$/
sort_cmd	tree_sort.c	/^static int sort_cmd (char *params, void *data)$/
spell_cmd	spell.c	/^static int spell_cmd(char *params,void *data){$/
spell_node	spell.c	/^static void spell_node(Node *node){$/
stats_cmd	statcmds.c	/^static int stats_cmd(char *params, void *data){$/
status	ui_overlay.c	/^static void status(char *message, int ttl){$/
status_draw	ui_overlay.c	/^void status_draw(void)$/
string2action	ui_binding.c	/^static int string2action(char *str){$/
string2keycode	ui_binding.c	/^static int string2keycode(char *str){$/
string2scope	ui_binding.c	/^static int string2scope(char *str){$/
string2style	ui_style.c	/^static int string2style(char *str){$/
string_is_oneof	xml_tok.c	/^int string_is_oneof (char *s, char *ss[])$/
stristr	tree.c	/^static char *stristr (const char *String, const ch/
swp	tree_sort.c	/^#define swp(a,b) do{\\$/
tidy_keyname	ui_binding.c	/^char *tidy_keyname (const char *keyname)$/
toggle_done_cmd	tree_todo.c	/^static int toggle_done_cmd(char *params,void *data/
toggle_todo_cmd	tree_todo.c	/^static int toggle_todo_cmd(char *params,void *data/
tokenize	tokenizer.c	/^char *tokenize (char *haystack)$/
transform	file_help.c	/^#define transform(a,b) case a:\\$/
tree_duplicate	tree.c	/^void tree_duplicate(Node *source, Node *target){$/
tree_free	tree.c	/^void tree_free (Node *node)$/
tree_new	tree.c	/^Node *tree_new ()$/
ui_bind_cmd	ui_binding.c	/^static int ui_bind_cmd(char *params, void *data){$/
ui_context_cmd	ui_binding.c	/^static int ui_context_cmd (char *params, void *dat/
ui_draw	ui_draw.c	/^void ui_draw (Node *node, char *input, int edit_mo/
ui_edit_cmd	ui_edit.c	/^static int ui_edit_cmd (char *params, void *data)$/
ui_end	ui.c	/^void ui_end ()$/
ui_getstr	ui_edit.c	/^void ui_getstr(char *prompt, char *datastorage){$/
ui_getstr_loc	ui_edit.c	/^int ui_getstr_loc(char *input, int x,int y, int ma/
ui_helptext_cmd	ui_overlay.c	/^static int ui_helptext_cmd(char *params,void *data/
ui_init	ui.c	/^void ui_init ()$/
ui_input	ui.c	/^int ui_input ()$/
ui_status_clear_cmd	ui_overlay.c	/^static int ui_status_clear_cmd(char *params,void */
ui_status_cmd	ui_overlay.c	/^static int ui_status_cmd(char *params,void *data){/
ui_style	ui_style.c	/^void ui_style(int style_no){$/
ui_style_cmd	ui_style.c	/^static int ui_style_cmd(char *params, void *data){/
ui_style_restore_color	ui_style.c	/^void ui_style_restore_color(){$/
undefined_key	ui.h	/^#define undefined_key(a,c)\\$/
up	ui_draw.c	/^static Node *up (Node *sel, Node *node)$/
usage	hnb.c	/^static void usage (const char *av0)$/
write_default_prefs	prefs.c	/^void write_default_prefs ()$/
xml_check	file.c	/^int xml_check (char *filename)$/
xml_cuddle_nodes	file_xml.c	/^static Node *xml_cuddle_nodes (Node *node)$/
xml_export_nodes	file_xml.c	/^static void xml_export_nodes (FILE * file, Node *n/
xml_getpos	file.c	/^int xml_getpos (char *filename)$/
xml_quote	file_hnb.c	/^static char *xml_quote (const char *in)$/
xml_tok_cleanup	xml_tok.c	/^void xml_tok_cleanup (xml_tok_state * t)$/
xml_tok_get	xml_tok.c	/^int xml_tok_get (xml_tok_state * t, char **data)$/
xml_tok_init	xml_tok.c	/^xml_tok_state *xml_tok_init (FILE * file_in)$/
xml_unquote	file_opml.c	/^static void xml_unquote(char *str){$/
